# main_app/views.py
from django.shortcuts import render
from django.http import HttpResponse
from django.views.generic.edit import CreateView

def home(request):
    try:
        notificaciones = [
            {
                "usuario": "Sof√≠a Marcano",
                "mensaje": "le ha dado like a tu publicaci√≥n.",
                "avatar_url": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQytc93VfA29gwZ4w1ySdWjx1CSJBM6qGG3BA&s"
            },
            {
                "usuario": "Lisangely Goncalves",
                "mensaje": "ha comentado en tu publicaci√≥n.",
                "avatar_url": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQytc93VfA29gwZ4w1ySdWjx1CSJBM6qGG3BA&s"
            },
            {
                "usuario": "Valeria Ciccolella",
                "mensaje": "le ha dado like a tu publicaci√≥n.",
                "avatar_url": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQytc93VfA29gwZ4w1ySdWjx1CSJBM6qGG3BA&s"
            },
        ]
        usuario = {
                "nombre": "Helena Torres",
                "foto": "/static/img/12345678.png", 
                "email": "valTorres@gmail.com",
                "ci": "12345678",
                "fecha_nacimiento": "23/9/2002",
                "genero": "femenino",
                "descripcion": "Pensamientos ruidosos, ideas claras y playlists que rompen rutinas. üñ§üî•",
                "color_favorito": "magenta",
                "libro_favorito": "- \"Eleanor & Park\" de Rainbow Rowell",
                "musica_favorita": "Punk-Rock",
                "videojuegos_favoritos": "Disco Elysium",
                "password_hash": "123456",
                "configuracion": "",
                "fecha_registro": "22/7/2025",
            }
        
        posts = [
            {
                "usuario": "Emanuel Delgado",
                "foto": "/static/img/12345679.png",
                "contenido": "La verdad es que √∫ltimamente me he clavado duro en el desarrollo web. Hay algo incre√≠blemente satisfactorio en ver c√≥mo una idea se convierte en una app funcional, justo ah√≠, en el navegador. üòéüíª\nMe encanta jugar con React y ver c√≥mo los componentes toman vida con solo unas l√≠neas bien pensadas. Tambi√©n estoy meti√©ndome cada vez m√°s en el backend‚ÄîDjango y Node me tienen intrigado. Me gusta entender c√≥mo se conectan todas las piezas: base de datos, API, frontend‚Ä¶ como un rompecabezas que s√≥lo cobra sentido cuando todo fluye.\nY s√≠, me emociono con cosas como la optimizaci√≥n de carga, dise√±o responsive y esas peque√±as animaciones que hacen que la experiencia sea m√°s suave. üé®‚öôÔ∏è‚ú®\nSi alguien quiere intercambiar ideas o hablar sobre sus proyectos locos de apps web, aqu√≠ estoy.",
                "reacciones": "70 mil",  
                "comentarios": "500",
                "fecha_creacion": "11 hrs"
            },
            {
                "usuario": "Isabel C√°rdenas",
                "foto": "/static/img/12345680.png",
                "contenido": "Docker y yo tenemos una relaci√≥n complicada. üòÖ Cada vez que creo que entend√≠ los contenedores, aparece una red que no conecta, un volumen que no se monta, o un error que me hace cuestionar mi existencia como dev.\nHoy pas√© 3 horas peleando con un bind mount... spoiler: era un typo. ü§¶‚Äç‚ôÄÔ∏è\nSi alguien tiene tips, rituales m√°gicos o paciencia infinita para lidiar con estas bestias virtuales, se aceptan abrazos y sugerencias.",
                "reacciones": "2 mil",  
                "comentarios": "350",
                "fecha_creacion": "6 hrs"
            },
            {
                "usuario": "Bel√©n Cruz",
                "foto": "/static/img/12345681.png",
                "contenido": "Los templates de Django son como la mezcla perfecta entre orden y magia ‚ú®. Literalmente te permiten separar el HTML del caos l√≥gico y mantener todo bonito, limpio y funcional. üôå\nDjango lo tiene bien pensado. üéØ",
                "reacciones": "14",  
                "comentarios": "3",
                "fecha_creacion": "5 min"
            },
        ]
        friendList = [
            {
                "user": "Emanuel Delgado",
                "pfp": "/static/img/12345679.png",
                "active": True,
                "lastActive": ""
            },
            {
                "user": "Isabel C√°rdenas",
                "pfp": "/static/img/12345680.png",
                "active": True,
                "lastActive": ""
            },
            {
                "user": "Bel√©n Cruz",
                "pfp": "/static/img/12345681.png",
                "active": False,
                "lastActive": "10 mins"
            },
        ]

        return render(request, 'home.html', {
            'notificaciones': notificaciones,
            'user' : usuario,
            'posts': posts,
            'friendList': friendList
        })
    except Exception as e:
        return HttpResponse(f"Error en home: {str(e)}")

def notifications(request):
    try:
        # This is sample data - in a real app, you would fetch this from a database
        all_notifications = [
            {
                "user_name": "Sofia Marcano",
                "user_image": "https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397_640.png",
                "action": "le ha dado like a tu publicaci√≥n.",
            },
            {
                "user_name": "Lisangely Goncalves",
                "user_image": "https://i.pinimg.com/736x/82/47/0b/82470b4ed44c3edacfcd4201e2297050.jpg",
                "action": "ha comentado en tu publicaci√≥n.",
            },
            {
                "user_name": "Lisangely Goncalves",
                "user_image": "https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8cHJvZmlsZXxlbnwwfHwwfHx8MA%3D%3D",
                "action": "ha comentado en tu publicaci√≥n.",
            },
            {
                "user_name": "Sofia Marcano",
                "user_image": "https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397_640.png",
                "action": "le ha dado like a tu publicaci√≥n.",
            },
            {
                "user_name": "Sofia Marcano",
                "user_image": "https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397_640.png",
                "action": "le ha dado like a tu publicaci√≥n.",
            },
            {
                "user_name": "Sofia Marcano",
                "user_image": "https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397_640.png",
                "action": "le ha dado like a tu publicaci√≥n.",
            },
            {
                "user_name": "Sofia Marcano",
                "user_image": "https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397_640.png",
                "action": "le ha dado like a tu publicaci√≥n.",
            },
            {
                "user_name": "Sofia Marcano",
                "user_image": "https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397_640.png",
                "action": "le ha dado like a tu publicaci√≥n.",
            },
            {
                "user_name": "Sofia Marcano",
                "user_image": "https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397_640.png",
                "action": "le ha dado like a tu publicaci√≥n.",
            },
            {
                "user_name": "Sofia Marcano",
                "user_image": "https://cdn.pixabay.com/photo/2016/03/31/19/56/avatar-1295397_640.png",
                "action": "le ha dado like a tu publicaci√≥n.",
            },
            {
                "user_name": "Lisangely Goncalves",
                "user_image": "https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8cHJvZmlsZXxlbnwwfHwwfHx8MA%3D%3D",
                "action": "ha comentado en tu publicaci√≥n.",
            },
            {
                "user_name": "Lisangely Goncalves",
                "user_image": "https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8cHJvZmlsZXxlbnwwfHwwfHx8MA%3D%3D",
                "action": "ha comentado en tu publicaci√≥n.",
            },
            {
                "user_name": "Lisangely Goncalves",
                "user_image": "https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8cHJvZmlsZXxlbnwwfHwwfHx8MA%3D%3D",
                "action": "ha comentado en tu publicaci√≥n.",
            },
            {
                "user_name": "Lisangely Goncalves",
                "user_image": "https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8cHJvZmlsZXxlbnwwfHwwfHx8MA%3D%3D",
                "action": "ha comentado en tu publicaci√≥n.",
            },
            {
                "user_name": "Lisangely Goncalves",
                "user_image": "https://images.unsplash.com/photo-1522075469751-3a6694fb2f61?fm=jpg&q=60&w=3000&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8cHJvZmlsZXxlbnwwfHwwfHx8MA%3D%3D",
                "action": "ha comentado en tu publicaci√≥n.",
            },
        ]
        count = int(request.GET.get("count", 5))  # Mostrar 5 por defecto
        notifications = all_notifications[:count]
        return render(
            request,
            "notificationsTemplate.html",
            {"notifications": notifications, "count": count},
        )
    except Exception as e:
        return HttpResponse(f"Error en notifications: {str(e)}")

def chat_with_friend(request):
    # Aqu√≠ puedes agregar l√≥gica para obtener datos del amigo o mensajes
    context = {
        "friend_name": 'Bel√©n Cruz',
        # Puedes agregar m√°s datos que necesites pasar a la plantilla
    }
    return render(request, "chatTemplate.html", context)


def custom_404(request, exception):
    return render(request, "404.html", status=404)
